
	.data
area:	.word 0
perimeter:	.word 0

	.text 			# The .text assembler directive indicates
	.globl main		# The following is the code (as oppose to data)
main:				# .globl makes main know to the 
				# outside of the program.
# Prologue begins 
	sw $fp, 0($sp)		# Save the frame pointer
	sub $fp, $sp, 4		# Update the frame pointer

	sub $sp, $sp, 20		# Make space for the locals
# Prologue ends

	li.d $f2, 3.00
	s.d $f2, 0($fp)
	li.d $f2, 9.90
	s.d $f2, -8($fp)
	l.d $f2, 0($fp)
	l.d $f4, -8($fp)
	mul.d $f6, $f2, $f4
	s.d $f6, area
	li $v0, 2
	l.d $f2, 0($fp)
	l.d $f4, -8($fp)
	add.d $f6, $f2, $f4
	mul $t0, $v0, $f6
	s.d $t0, perimeter
	li $v0, 22
	l.d $f2, 0($fp)
	mul $t0, $v0, $f2
	l.d $f2, 0($fp)
	mul $v0, $t0, $f2
	li $t0, 7
	div $t1, $v0, $t0
	s.d $t1, area
	li $v0, 2
	li $t0, 22
	mul $t1, $v0, $t0
	l.d $f2, 0($fp)
	mul $v0, $t1, $f2
	li $t0, 7
	div $t1, $v0, $t0
	s.d $t1, perimeter

# Epilogue Begins
	add $sp, $sp, 20
	lw $fp, 0($sp)  
	jr        $31		# Jump back to the operating system.
# Epilogue Ends

